name: Android CI Build (Online Wrapper Init)

on:
  push:
    branches: [ "main", "master" ] # Or your default branch
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    env:
      # Define the Gradle version for the wrapper and build.
      # Choose a version compatible with your Android Gradle Plugin (AGP).
      # For AGP 8.2.1 (used in build.gradle example), Gradle 8.2 or higher is typically needed.
      # Check AGP release notes for compatibility.
      GRADLE_VERSION_TO_USE: '8.5' # Example: Use Gradle 8.5

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17' # Common for modern Android development
        distribution: 'temurin'

    # This step installs the specified version of Gradle and adds the 'gradle' command to the PATH.
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        gradle-version: ${{ env.GRADLE_VERSION_TO_USE }}
        # Optional: Disable default wrapper detection if you ensure gradle-wrapper.properties is NOT in your repo
        # wrapper-detection-enabled: false
        # Optional: Disable caching for this step if you want it truly fresh,
        # but caching for later steps is still good.
        # cache-disabled: true


    # This step uses the 'gradle' command (from Setup Gradle step) to initialize
    # the Gradle wrapper files (gradlew, gradlew.bat, gradle-wrapper.jar, gradle-wrapper.properties)
    # in the runner's workspace. The generated gradle-wrapper.properties will point to GRADLE_VERSION_TO_USE.
    - name: Initialize Gradle Wrapper
      run: gradle wrapper --gradle-version ${{ env.GRADLE_VERSION_TO_USE }} --distribution-type bin
      # Adding --distribution-type bin to ensure it fetches the binary distribution

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Optional but recommended: Cache Gradle dependencies and wrapper distributions
    # This cache will use the wrapper files generated in the previous step.
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper/dists
        # Key for the cache. Includes Gradle version and hash of build files.
        key: ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION_TO_USE }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-${{ env.GRADLE_VERSION_TO_USE }}-

    - name: Build with Gradle Wrapper
      run: ./gradlew assembleDebug # Builds a debug APK using the generated wrapper

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk # Name of the artifact
        path: app/build/outputs/apk/debug/app-debug.apk # Path to the APK
        if-no-files-found: error # Fail if APK not found
